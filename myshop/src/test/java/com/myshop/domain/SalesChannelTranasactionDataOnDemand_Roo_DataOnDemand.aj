// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.myshop.domain;

import com.myshop.domain.ProductDataOnDemand;
import com.myshop.domain.SalesChannelDataOnDemand;
import com.myshop.domain.SalesChannelTranasaction;
import com.myshop.domain.SalesChannelTranasactionDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect SalesChannelTranasactionDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SalesChannelTranasactionDataOnDemand: @Component;
    
    private Random SalesChannelTranasactionDataOnDemand.rnd = new SecureRandom();
    
    private List<SalesChannelTranasaction> SalesChannelTranasactionDataOnDemand.data;
    
    @Autowired
    ProductDataOnDemand SalesChannelTranasactionDataOnDemand.productDataOnDemand;
    
    @Autowired
    SalesChannelDataOnDemand SalesChannelTranasactionDataOnDemand.salesChannelDataOnDemand;
    
    public SalesChannelTranasaction SalesChannelTranasactionDataOnDemand.getNewTransientSalesChannelTranasaction(int index) {
        SalesChannelTranasaction obj = new SalesChannelTranasaction();
        setSoldDate(obj, index);
        setSoldQty(obj, index);
        setUnit(obj, index);
        setUnitPrice(obj, index);
        return obj;
    }
    
    public void SalesChannelTranasactionDataOnDemand.setSoldDate(SalesChannelTranasaction obj, int index) {
        Date soldDate = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setSoldDate(soldDate);
    }
    
    public void SalesChannelTranasactionDataOnDemand.setSoldQty(SalesChannelTranasaction obj, int index) {
        Double soldQty = new Integer(index).doubleValue();
        obj.setSoldQty(soldQty);
    }
    
    public void SalesChannelTranasactionDataOnDemand.setUnit(SalesChannelTranasaction obj, int index) {
        String unit = "unit_" + index;
        obj.setUnit(unit);
    }
    
    public void SalesChannelTranasactionDataOnDemand.setUnitPrice(SalesChannelTranasaction obj, int index) {
        Double unitPrice = new Integer(index).doubleValue();
        obj.setUnitPrice(unitPrice);
    }
    
    public SalesChannelTranasaction SalesChannelTranasactionDataOnDemand.getSpecificSalesChannelTranasaction(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        SalesChannelTranasaction obj = data.get(index);
        Long id = obj.getId();
        return SalesChannelTranasaction.findSalesChannelTranasaction(id);
    }
    
    public SalesChannelTranasaction SalesChannelTranasactionDataOnDemand.getRandomSalesChannelTranasaction() {
        init();
        SalesChannelTranasaction obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return SalesChannelTranasaction.findSalesChannelTranasaction(id);
    }
    
    public boolean SalesChannelTranasactionDataOnDemand.modifySalesChannelTranasaction(SalesChannelTranasaction obj) {
        return false;
    }
    
    public void SalesChannelTranasactionDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = SalesChannelTranasaction.findSalesChannelTranasactionEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'SalesChannelTranasaction' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<SalesChannelTranasaction>();
        for (int i = 0; i < 10; i++) {
            SalesChannelTranasaction obj = getNewTransientSalesChannelTranasaction(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
